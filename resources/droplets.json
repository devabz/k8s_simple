{
    "names": [
        "master-node",
        "worker-node-1",
        "worker-node-2",
        "worker-node-3"
    ],
    "region": "lon",
    "size": "s-2vcpu-2gb",
    "image": "ubuntu-25-04-x64",
    "ssh_keys": [
        "79:50:2e:f4:c8:42:a1:d2:14:0c:df:32:f9:55:5e:74",
        "ef:f7:a3:9e:38:af:5d:06:39:f9:38:2a:49:b8:67:f2"
    ],
    "backups": false,
    "ipv6": false,
    "monitoring": true,
    "user_data": "#cloud-config\nwrite_files:\n  - path: /usr/local/bin/myscript.sh\n    permissions: '0755'\n    owner: root:root\n    content: |\n      #!/bin/bash\n      # Common setup for all servers (Control Plane and Nodes)\n\n      set -euxo pipefail\n\n      # Kubernetes Variable Declaration\n      KUBERNETES_VERSION=\"v1.30\"\n      CRIO_VERSION=\"v1.30\"\n      KUBERNETES_INSTALL_VERSION=\"1.30.0-1.1\"\n\n      # Disable swap\n      sudo swapoff -a\n\n      # Keeps the swap off during reboot\n      (crontab -l 2>/dev/null; echo \"@reboot /sbin/swapoff -a\") | crontab - || true\n      sudo apt-get update -y\n\n      # Create the .conf file to load the modules at bootup\n      cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf\n      overlay\n      br_netfilter\n      EOF\n\n      sudo modprobe overlay\n      sudo modprobe br_netfilter\n\n      # Sysctl params required by setup, params persist across reboots\n      cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf\n      net.bridge.bridge-nf-call-iptables  = 1\n      net.bridge.bridge-nf-call-ip6tables = 1\n      net.ipv4.ip_forward                 = 1\n      EOF\n\n      # Apply sysctl params without reboot\n      sudo sysctl --system\n\n      sudo apt-get update -y\n      sudo apt-get install -y apt-transport-https ca-certificates curl gpg\n\n      # Install CRI-O Runtime\n      sudo apt-get update -y\n      sudo apt-get install -y software-properties-common curl apt-transport-https ca-certificates\n\n      curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/stable:/$CRIO_VERSION/deb/Release.key |\n          gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg\n\n      echo \"deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/stable:/$CRIO_VERSION/deb/ /\" |\n          tee /etc/apt/sources.list.d/cri-o.list\n\n      sudo apt-get update -y\n      sudo apt-get install -y cri-o\n\n      sudo systemctl daemon-reload\n      sudo systemctl enable crio --now\n      sudo systemctl start crio.service\n\n      echo \"CRI runtime installed successfully\"\n\n      # Install kubelet, kubectl, and kubeadm\n      curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/Release.key |\n          gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\n\n      echo \"deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/ /\" |\n          tee /etc/apt/sources.list.d/kubernetes.list\n\n      sudo apt-get update -y\n      sudo apt-get install -y kubelet=\"$KUBERNETES_INSTALL_VERSION\" kubectl=\"$KUBERNETES_INSTALL_VERSION\" kubeadm=\"$KUBERNETES_INSTALL_VERSION\"\n\n      # Prevent automatic updates for kubelet, kubeadm, and kubectl\n      sudo apt-mark hold kubelet kubeadm kubectl\n\n      sudo apt-get update -y\n\n      # Install jq, a command-line JSON processor\n      sudo apt-get install -y jq\n\n      # Retrieve the local IP address of the eth0 interface and set it for kubelet\n      local_ip=\"$(ip --json addr show eth1 | jq -r '.[0].addr_info[] | select(.family == \"inet\") | .local')\"\n\n      # Write the local IP address to the kubelet default configuration file\n      cat > /etc/default/kubelet << EOF\n      KUBELET_EXTRA_ARGS=--node-ip=$local_ip\n      EOF\n\nruncmd:\n  - /usr/local/bin/myscript.sh\n",
    "tags": [
        "k8s"
    ]
}